% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PLR-confint.R
\name{confint.PLR}
\alias{confint.PLR}
\title{Confidence intervals for the Penalized Lorenz Regression}
\usage{
\method{confint}{PLR}(
  object,
  parm = c("Gini", "LR2"),
  level = 0.95,
  type = c("norm", "basic", "perc"),
  which.pars = NULL,
  ...
)
}
\arguments{
\item{object}{An object of class \code{"PLR_boot"}.}

\item{parm}{A logical value determining whether the confidence interval is computed for the explained Gini coefficient, for the Lorenz-R2 or for the vector of theta coefficients. Possible values are \code{"Gini"} (default, for the explained Gini) and \code{"LR2"} (for the Lorenz-R2)}

\item{level}{A numeric giving the level of the confidence interval. Default value is 0.95.}

\item{type}{A character string specifying the bootstrap method. Possible values are \code{"norm"}, \code{"basic"} and \code{"perc"}. For more information, see the argument \code{type} of the function \code{\link{boot.ci}} from the \code{\link{boot}} library.}

\item{which.pars}{A vector of size 2 specifying the index of the tuning parameter (first element) and the index of the penalty parameter (second element) that should be selected.
Default is \code{NULL}, in which case the parameters are selected by the available methods : BIC, bootstrap and cross-validation (if the class of \code{object} contains \code{PLR_cv}).}
}
\value{
The desired confidence interval.
If \code{which.pars=NULL}, the output is a matrix where each row corresponds to a selection method.
Otherwise, the tuning and penalty parameters are specified by the vector \code{which.pars} and the output is a vector.
}
\description{
\code{confint.PLR} provides bootstrap confidence intervals for the explained Gini coefficient and Lorenz-R2 for an parm of class \code{"PLR_boot"}.
}
\examples{
data(Data.Incomes)
set.seed(123)
Data <- Data.Incomes[sample(1:nrow(Data.Incomes),50),]
PLR <- Lorenz.Reg(Income ~ ., data = Data, h.grid = nrow(Data)^(-1/5.5),
                  penalty = "SCAD", eps = 0.02, seed.boot = 123, B = 40, Boot.inference = TRUE)
confint(PLR)

}
\seealso{
\code{\link{Lorenz.boot}}, \code{\link[boot]{boot.ci}}
}
