% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PLR-plot.R
\name{plot.PLR}
\alias{plot.PLR}
\title{Plots for the Penalized Lorenz Regression}
\usage{
\method{plot}{PLR}(PLR)
}
\arguments{
\item{PLR}{Output of a call to \code{\link{Lorenz.Reg}}, where \code{penalty!="none"}.}
}
\value{
Two types of plots
In each case, the horizontal axis is -log(lambda), lambda being the value of the regularization parameter.
The first type of plot is a traceplot, where the vertical axis gives the size of the coefficient attached to each covariate.
The second type of plot shows the evolution of the score(s) for each of the selection method chosen in the \code{PLR} object.
For comparability reasons, the score are normalized such that  the larger the better and the optimum is attained in 1.
Since the whole path depends on the chosen bandwidth for the kernel, and the optimal bandwidth may depend on the selection method, the plots are produced for each selection method used in the PLR object
}
\description{
\code{plot.PLR} provides plots for an object of class \code{PLR}.
}
\details{
For cross-validation and bootstrap, the scores may not cover the whole path.
We run the FABS or SCAD-FABS algorithm on the bootstrap resamples (bootstrap) or folds (cross-validaiton) imposing the lambda grid obtained in the original sample.
However, the algorithm may stop before the end of the grid. In fact, it stops as soon as the next iteration would increase the unpenalized loss.
We dismiss lambda values for which this situation occurs more than 5\% of the time.
}
\examples{
data(Data.Incomes)
PLR <- Lorenz.Reg(Income ~ ., data = Data.Incomes, penalty = "SCAD", lambda.choice = c("BIC","CV"), eps = 0.005, seed.CV = 123, nfolds = 5)
plot.PLR(PLR)

}
\seealso{
\code{\link{Lorenz.Reg}}
}
